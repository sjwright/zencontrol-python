[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zencontrol-python"
version = "0.0.0"
description = "This is an implementation of the Zencontrol TPI Advanced protocol, written in Python."
readme = "README.md"
requires-python = ">=3.11"
license = {text = "LGPL-2.1"}
authors = [
    {name = "Simon Wright"},
]
keywords = ["dali", "lighting", "control", "zencontrol", "home-automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v2.1 (LGPLv2.1)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
]
mqtt = [
    "aiomqtt>=2.1.0",
    "PyYAML>=6.0",
]

[project.scripts]
zencontrol-mqtt = "examples.mqtt_bridge:main"

[project.urls]
Homepage = "https://github.com/sjwright/zencontrol-python"
Repository = "https://github.com/sjwright/zencontrol-python"

[tool.setuptools.packages.find]
where = ["."]
include = ["zencontrol*"]

[tool.setuptools.package-data]
zencontrol = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
